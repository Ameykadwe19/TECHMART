version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: techmart_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shopping_network

  backend:
    build: ./server
    container_name: techmart_backend
    environment:
      NODE_ENV: development
      PORT: 5000
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_FROM: ${EMAIL_FROM}
      FRONTEND_URL: ${FRONTEND_URL}
      UPLOAD_PATH: ${UPLOAD_PATH}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE}
      REDIS_URL: ${REDIS_URL}
      PAYMENT_MODE: ${PAYMENT_MODE}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      RESET_TOKEN_EXPIRES: ${RESET_TOKEN_EXPIRES}
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - shopping_network

  client:
    build: ./client
    container_name: techmart_client
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - shopping_network

volumes:
  postgres_data:

networks:
  shopping_network:
    driver: bridge
